{"version":3,"sources":["utils/http.js","pages/Login/index.jsx","services/login.js","pages/Home.jsx","services/category.js","pages/category/EditCategory.jsx","pages/category/CategoryList.jsx","services/item.js","utils/config.js","pages/item/EditItem.jsx","pages/item/ItemList.jsx","services/hero.js","pages/hero/EditHero.jsx","pages/hero/HeroList.jsx","services/article.js","pages/article/EditArticle.jsx","pages/article/ArticleList.jsx","services/user.js","pages/user/EditUser.jsx","pages/user/UserList.jsx","router/index.js","pages/PageNotFound.jsx","component/Frame/index.jsx","component/App.jsx","index.js"],"names":["createHistory","require","createHashHistory","instance","axios","create","baseURL","get","url","params","post","data","put","del","delete","interceptors","response","use","res","err","console","log","message","error","status","push","Promise","reject","request","config","localStorage","token","headers","Authorization","index","props","onFinish","values","a","username","user","success","history","className","name","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","type","htmlType","Home","React","Component","createCategory","getCategory","Option","layout","labelCol","span","wrapperCol","tailLayout","offset","onFinishFailed","errorInfo","withRouter","useForm","form","useState","cateList","setCateList","match","id","useEffect","then","parent","setFieldsValue","_id","label","map","item","key","value","CategoryList","dataSource","setDataSource","columns","title","render","text","record","dataIndex","txt","size","shape","onClick","onCancel","info","onConfirm","style","margin","rowKey","pagination","pageSize","showTotal","total","showQuickJumper","bordered","stripe","createItem","getItem","imageUrl","setImageUrl","loading","setLoading","icon","uploadButton","LoadingOutlined","PlusOutlined","listType","showUploadList","action","onChange","file","handleChange","src","alt","width","ItemList","align","createHero","getHero","TextArea","TabPane","itemList","setItemList","skillsImageUrl","setSkillsImageUrl","scores","images","skills","avatar","difficult","skilles","attack","survive","defaultActiveKey","tab","mode","count","List","fields","add","remove","field","fieldKey","skillsIconChange","MinusCircleOutlined","marginBottom","HeroList","createArticle","getArticle","BraftEditor","createEditorState","editorState","setEditorState","body","toHTML","e","handleEditorChange","ArticleList","categories","color","createAdmin","getAdmin","disabled","UserList","mainRoutes","path","component","Login","adminRoutes","exact","EditCategory","EditItem","EditHero","EditArticle","EditUser","Header","Content","Footer","Sider","SubMenu","collapsed","setCollapsed","location","pathname","defaultKey","defaultKey1","setDefaultKey1","setUser","minHeight","collapsible","onCollapse","breakpoint","theme","defaultSelectedKeys","keyPath","selectedKeys","domEvent","PieChartOutlined","to","BarsOutlined","SnippetsOutlined","TeamOutlined","ProfileOutlined","padding","textAlign","paddingRight","LoginOutlined","removeItem","split","children","App","Frame","route","routeProps","ReactDOM","from","document","getElementById"],"mappings":"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","file":"static/js/main.67e1f498.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { message } from \"antd\";\nconst createHistory = require(\"history\").createHashHistory\n\nconst instance = axios.create({\n  baseURL: \"admin/api\"\n});\n\ninstance.interceptors.response.use(\n  res => {\n    return res;\n  },\n  err => {\n    console.log(err.response)\n    if (err.response.data.message) {\n      message.error(err.response.data.message);\n\n      if (err.response.status === 401) {\n        const history = createHistory();\n        history.push(\"/login\");\n      }\n    }\n    return Promise.reject(err);\n  }\n);\n\ninstance.interceptors.request.use(function(config) {\n    if (localStorage.token) {\n      config.headers.Authorization = \"Bearer \" + localStorage.token;\n    }\n    return config;\n  },function(err) {\n    return Promise.reject(err);\n  }\n);\n\nexport function get(url, params) {\n  return instance.get(url, {\n    params\n  });\n}\n\nexport function post(url, data) {\n  return instance.post(url, data);\n}\n\nexport function put(url, data) {\n  return instance.put(url, data);\n}\n\nexport function del(url) {\n  return instance.delete(url);\n}\n","import React from \"react\";\nimport { Form, Input, Button,message } from \"antd\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { userLogin } from \"../../services/login\";\nimport \"./style.less\";\n\nfunction index(props) {\n  const onFinish = async values => {\n    const res = await userLogin({ ...values });\n    localStorage.token = res.data.token\n    localStorage.username = res.data.user.username\n    message.success('登录成功！')\n    props.history.push(\"/admin\")\n  };\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-card\">\n        <div className=\"login-logo\">\n          <h1>王者荣耀</h1>\n        </div>\n        <Form name=\"normal_login\" className=\"login-form\" onFinish={onFinish}>\n          <Form.Item\n            name=\"username\"\n            rules={[{ required: true, message: \"Please input your Username!\" }]}\n          >\n            <Input\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\n              placeholder=\"Username\"\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: \"Please input your Password!\" }]}\n          >\n            <Input\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\n              type=\"password\"\n              placeholder=\"Password\"\n            />\n          </Form.Item>\n          <Form.Item>\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n            >\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default index;\n","import {post} from '../utils/http'\n\nexport function userLogin(data) {\n    return post('/login',data)\n}\n","import React from 'react'\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div>Home</div>\n    )\n  }\n}","import {get,put,del,post} from '../utils/http'\n\nexport function createCategory(data) {\n    return post('/rest/categories',data)\n}\n\nexport function putCategory(id,data) {\n    return put(`/rest/categories/${id}`,data)\n}\n\nexport function getCategory() {\n    return get('/rest/categories')\n}\n\nexport function getCategoryByID(id) {\n    return get(`/rest/categories/${id}`)\n}\n\nexport function delCategory(id) {\n    return del(`/rest/categories/${id}`)\n}","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, message, Select } from \"antd\";\nimport {\n  putCategory,\n  getCategoryByID,\n  getCategory,\n  createCategory\n} from \"../../services/category\";\nimport { withRouter } from \"react-router-dom\";\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 10 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction EditCategory(props) {\n  const [form] = Form.useForm();\n  const [cateList, setCateList] = useState([]);\n  const onFinish = async values => {\n    if (props.match.params.id) {\n      const res = await putCategory(props.match.params.id, values);\n      if (res.status === 200) {\n        message.success(\"修改成功！\");\n        props.history.push(\"/admin/categorylist\");\n      } else {\n        message.error(\"修改失败！\");\n      }\n    } else {\n      const res = await createCategory(values);\n      if (res.status === 200) {\n        message.success(\"添加成功\");\n        props.history.push(\"/admin/categorylist\");\n      }\n    }\n  };\n  useEffect(() => {\n    if (props.match.params.id) {\n      getCategoryByID(props.match.params.id).then(res => {\n        if (res.data.parent) {\n          form.setFieldsValue({\n            name: res.data.name,\n            parent: res.data.parent._id\n          });\n        } else {\n          form.setFieldsValue({\n            name: res.data.name\n          });\n        }\n      });\n    }\n\n    getCategory().then(res => {\n      setCateList(res.data);\n    });\n  }, []);\n\n  return (\n    <Form\n      {...layout}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      form={form}\n    >\n      <Form.Item label=\"上级分类\" name=\"parent\">\n        <Select>\n          {cateList.map(item => {\n            return (\n              <Option key={item._id} value={item._id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"分类名称\"\n        name=\"name\"\n        rules={[{ required: true, message: \"请输入分类!\" }]}\n      >\n        <Input />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default withRouter(EditCategory);\n","import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Popconfirm, message } from \"antd\";\nimport { getCategory, delCategory } from \"../../services/category\";\n\nfunction CategoryList(props) {\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    getCategory().then(res => {\n      setDataSource(res.data);\n    });\n  }, []);\n  const showTotal = (total) => {\n    return `共${total}条`\n  };\n  const columns = [\n    {\n      title: \"序号\",\n      render:(text,record,index)=>index+1\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"_id\"\n    },\n    {\n      title: \"上级分类\",\n      dataIndex:\"parent\",\n      render: (text, record, index) => {\n        if(record.parent){\n          return record.parent.name\n        }else return\n      }\n    },\n    {\n      title: \"名称\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"操作\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => {\n                props.history.push(`/admin/editcategory/${record._id}`);\n              }}\n            >\n              修改\n            </Button>\n            <Popconfirm\n              title=\"确定要删除此项吗？\"\n              onCancel={() => message.info(\"取消删除\")}\n              onConfirm={async () => {\n                const res = await delCategory(record._id);\n                if (res.data.success === true) {\n                   message.success(\"删除成功！\")\n                   getCategory().then(res => {\n                    setDataSource(res.data);\n                  });\n                }\n            \n              }}\n            >\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                shape=\"round\"\n                style={{ margin: \"0 10px\" }}\n              >\n                删除\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Table\n      rowKey=\"_id\"\n      columns={columns}\n      pagination={{\n        pageSize: 5,\n        showTotal:showTotal,\n        showQuickJumper: true,\n      }}\n      dataSource={dataSource}\n      bordered\n      stripe\n    />\n  );\n}\n\nexport default CategoryList;\n","import {get,put,del,post} from '../utils/http'\n\nexport function createItem(data) {\n    return post('/rest/items',data)\n}\n\nexport function putItem(id,data) {\n    return put(`/rest/items/${id}`,data)\n}\n\nexport function getItem() {\n    return get('/rest/items')\n}\n\nexport function getItemByID(id) {\n    return get(`/rest/items/${id}`)\n}\n\nexport function delItem(id) {\n    return del(`/rest/items/${id}`)\n}","export const serveUrl = \"\"","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, message, Upload } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { putItem, getItemByID, createItem } from \"../../services/item\";\nimport { withRouter } from \"react-router-dom\";\nimport { serveUrl } from \"../../utils/config\";\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 10 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction EditItem(props) {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [form] = Form.useForm();\n\n  const onFinish = async values => {\n    if (props.match.params.id) {\n      const res = await putItem(props.match.params.id, {\n        ...values,\n        icon: imageUrl\n      });\n      if (res.status === 200) {\n        message.success(\"修改成功！\");\n        props.history.push(\"/admin/itemlist\");\n      } else {\n        message.error(\"修改失败！\");\n      }\n    } else {\n      const res = await createItem({ ...values, icon: imageUrl });\n      if (res.status === 200) {\n        message.success(\"添加成功\");\n        props.history.push(\"/admin/itemlist\");\n      }\n    }\n  };\n  useEffect(() => {\n    if (props.match.params.id) {\n      getItemByID(props.match.params.id).then(res => {\n        form.setFieldsValue({\n          name: res.data.name\n        });\n        setImageUrl(res.data.icon);\n      });\n    }\n  }, []);\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      setLoading(false);\n      setImageUrl(info.file.response.url);\n    }\n  };\n\n  return (\n    <Form\n      {...layout}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      form={form}\n    >\n      <Form.Item\n        label=\"装备名称\"\n        name=\"name\"\n        rules={[{ required: true, message: \"请输入分类!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"装备图片\">\n        <Upload\n          name=\"file\"\n          listType=\"picture-card\"\n          className=\"avatar-uploader\"\n          showUploadList={false}\n          action={serveUrl + \"/admin/api/upload\"}\n          onChange={info => handleChange(info)}\n        >\n          {imageUrl ? (\n            <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n          ) : (\n            uploadButton\n          )}\n        </Upload>\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default withRouter(EditItem);\n","import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Popconfirm, message } from \"antd\";\nimport { getItem, delItem } from \"../../services/item\";\n\nfunction ItemList(props) {\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    getItem().then(res => {\n      setDataSource(res.data);\n    });\n  }, []);\n  const showTotal = (total) => {\n    return `共${total}条`\n  };\n  const columns = [\n    {\n      title: \"序号\",\n      align: \"center\",\n      render: (text, record, index) => index + 1\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"_id\",\n      width: 200,\n      align: \"center\"\n    },\n    {\n      title: \"装备名称\",\n      dataIndex: \"name\",\n      width: 180,\n      align: \"center\"\n    },\n    {\n      title: \"装备图片\",\n      dataIndex: \"icon\",\n      align: \"center\",\n      render: (text, record) => {\n        return <img src={record.icon} alt=\"\" style={{ width: \"60px\" }} />;\n      }\n    },\n    {\n      title: \"操作\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => {\n                props.history.push(`/admin/edititem/${record._id}`);\n              }}\n            >\n              修改\n            </Button>\n            <Popconfirm\n              title=\"确定要删除此项吗？\"\n              onCancel={() => message.info(\"取消删除\")}\n              onConfirm={async () => {\n                const res = await delItem(record._id);\n                if (res.data.success === true) {\n                  message.success(\"删除成功！\");\n                  getItem().then(res => {\n                    setDataSource(res.data);\n                  });\n                }\n              }}\n            >\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                shape=\"round\"\n                style={{ margin: \"0 10px\" }}\n              >\n                删除\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Table\n      rowKey=\"_id\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={{\n        pageSize: 5,\n        showTotal:showTotal,\n        showQuickJumper: true,\n      }}\n      bordered\n      stripe\n    />\n  );\n}\n\nexport default ItemList;\n","import {get,put,del,post} from '../utils/http'\n\nexport function createHero(data) {\n    return post('/rest/heroes',data)\n}\n\nexport function putHero(id,data) {\n    return put(`/rest/heroes/${id}`,data)\n}\n\nexport function getHero() {\n    return get('/rest/heroes')\n}\n\nexport function getHeroByID(id) {\n    return get(`/rest/heroes/${id}`)\n}\n\nexport function delHero(id) {\n    return del(`/rest/heroes/${id}`)\n}","import React, { useState, useEffect } from \"react\";\nimport {\n  Form,\n  Input,\n  Button,\n  message,\n  Upload,\n  Select,\n  Rate,\n  Tabs,\n  Row,\n  Col\n} from \"antd\";\nimport { LoadingOutlined, PlusOutlined,MinusCircleOutlined } from \"@ant-design/icons\";\nimport { getHeroByID, putHero,createHero } from \"../../services/hero\";\nimport { getCategory } from \"../../services/category\";\nimport { getItem } from \"../../services/item\";\nimport { withRouter } from \"react-router-dom\";\nimport { serveUrl } from \"../../utils/config\";\n\nconst { Option } = Select;\nconst { TextArea } = Input;\nconst { TabPane } = Tabs;\n\nconst rules = [{ required: true }];\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 10 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction EditHero(props) {\n  const [form] = Form.useForm();\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [cateList, setCateList] = useState([]);\n  const [itemList, setItemList] = useState([]);\n  const [skillsImageUrl, setSkillsImageUrl] = useState([]);\n  useEffect(() => {\n    if(props.match.params.id){\n      getHeroByID(props.match.params.id).then(res => {\n        if (res.data.scores) {\n          form.setFieldsValue({ ...res.data, ...res.data.scores });\n          const images = []\n          res.data.skills.map(item=>{\n            images.push(item.icon)\n            return\n          })\n          setImageUrl(res.data.avatar);\n          setSkillsImageUrl(images)\n        }\n      });\n    }\n    \n    getCategory().then(res => {\n      setCateList(res.data);\n    });\n    getItem().then(res => {\n      setItemList(res.data);\n    });\n  }, []);\n\n  \n\n  const onFinish = async values => {\n    const scores = {\n      difficult: values.difficult,\n      skilles: values.skilles,\n      attack: values.attack,\n      survive: values.survive\n    };\n    const skills = values.skills.map(item=>{\n      if(props.match.params.id){\n        if(typeof(item.icon)!=\"string\") {\n          item.icon = item.icon.file.response.url\n        }\n        return item\n      }else{\n        item.icon = item.icon.file.response.url\n       return item\n      }\n   })\n   values.skills = skills\n    values.scores = scores;\n    if(props.match.params.id) {\n      const res = await putHero(props.match.params.id, {\n        ...values,\n        avatar: imageUrl\n      });\n      if (res.status === 200) {\n        message.success(\"修改成功\");\n        props.history.push(\"/admin/herolist\");\n      }\n    }else{\n      const res = await createHero({ ...values, avatar: imageUrl });\n    if (res.status === 200) {\n      message.success(\"添加成功\");\n      props.history.push(\"/admin/herolist\");\n    }\n    }\n    \n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div className=\"ant-upload-text\">Upload</div>\n    </div>\n  );\n\n  const handleChange = info => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      setLoading(false);\n      setImageUrl(info.file.response.url);\n    }\n  };\n\n  const skillsIconChange = info => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      return;\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      setLoading(false);\n      skillsImageUrl.push(info.file.response.url)\n      setSkillsImageUrl(skillsImageUrl)\n    }\n  };\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      form={form}\n    >\n      <Tabs defaultActiveKey=\"2\">\n        <TabPane tab=\"基本信息\" key=\"1\">\n          <Form.Item\n            label=\"英雄名称\"\n            name=\"name\"\n            rules={[{ required: true, message: \"请输入分类!\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"英雄称号\"\n            name=\"title\"\n            rules={[{ required: true, message: \"请输入分类!\" }]}\n          >\n            <Input />\n          </Form.Item>\n          <Form.Item\n            label=\"英雄分类\"\n            name=\"categories\"\n            rules={[{ required: true, message: \"请选择分类!\" }]}\n          >\n            <Select placeholder=\"请选择英雄分类\" mode=\"multiple\">\n              {cateList.map(item => {\n                return (\n                  <Option key={item._id} value={item._id}>\n                    {item.name}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n          <Form.Item label=\"英雄头像\">\n            <Upload\n              name=\"file\"\n              listType=\"picture-card\"\n              className=\"avatar-uploader\"\n              showUploadList={false}\n              action={serveUrl + \"/admin/api/upload\"}\n              onChange={info => handleChange(info)}\n            >\n              {imageUrl ? (\n                <img src={imageUrl} alt=\"avatar\" style={{ width: \"100%\" }} />\n              ) : (\n                uploadButton\n              )}\n            </Upload>\n          </Form.Item>\n          <Form.Item\n            label=\"难度\"\n            name=\"difficult\"\n            rules={[{ required: true, message: \"请输入分类!\" }]}\n          >\n            <Rate count={10} />\n          </Form.Item>\n          <Form.Item\n            label=\"技能\"\n            name=\"skilles\"\n            rules={[{ required: true, message: \"请输入分类!\" }]}\n          >\n            <Rate count={10} />\n          </Form.Item>\n          <Form.Item\n            label=\"攻击\"\n            name=\"attack\"\n            rules={[{ required: true, message: \"请输入分类!\" }]}\n          >\n            <Rate count={10} />\n          </Form.Item>\n          <Form.Item\n            label=\"生存\"\n            name=\"survive\"\n            rules={[{ required: true, message: \"请输入分类!\" }]}\n          >\n            <Rate count={10} />\n          </Form.Item>\n          <Form.Item\n            label=\"顺风出装\"\n            name=\"items1\"\n            rules={[{ required: true, message: \"请选择顺风出装!\" }]}\n          >\n            <Select placeholder=\"请选择顺风出装\" mode=\"multiple\">\n              {itemList.map(item => {\n                return (\n                  <Option key={item._id} value={item._id}>\n                    {item.name}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"逆风出装\"\n            name=\"items2\"\n            rules={[{ required: true, message: \"请选择逆风出装!\" }]}\n          >\n            <Select placeholder=\"请选择逆风出装\" mode=\"multiple\">\n              {itemList.map(item => {\n                return (\n                  <Option key={item._id} value={item._id}>\n                    {item.name}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Form.Item>\n          <Form.Item\n            label=\"使用技巧\"\n            name=\"usageTips\"\n            rules={[{ required: true, message: \"请输入使用技巧!\" }]}\n          >\n            <TextArea />\n          </Form.Item>\n          <Form.Item\n            label=\"对抗技巧\"\n            name=\"battleTips\"\n            rules={[{ required: true, message: \"请输入对抗技巧!\" }]}\n          >\n            <TextArea />\n          </Form.Item>\n          <Form.Item\n            label=\"团战思路\"\n            name=\"teamTips\"\n            rules={[{ required: true, message: \"请输入团战思路!\" }]}\n          >\n            <TextArea />\n          </Form.Item>\n        </TabPane>\n        <TabPane tab=\"技能信息\" key=\"2\">\n          <Form.List name=\"skills\">\n            {(fields, { add, remove }) => {\n              return (\n                <div>\n                  <Row>\n                    {fields.map((field, index) => (\n                      <Col span={12} key={field.key}>\n                        <Form.Item\n                          name={[field.name, \"name\"]}\n                          fieldKey={[field.fieldKey, \"name\"]}\n                          rules={rules}\n                          label=\"名称\"\n                        >\n                          <Input placeholder=\"技能名称\" />\n                        </Form.Item>\n                        <Form.Item\n                          name={[field.name, \"icon\"]}\n                          fieldKey={[field.fieldKey, \"icon\"]}\n                          rules={rules}\n                          label=\"技能图标\"\n                        >\n                          <Upload\n                            name=\"file\"\n                            listType=\"picture-card\"\n                            className=\"avatar-uploader\"\n                            showUploadList={false}\n                            action={serveUrl + \"/admin/api/upload\"}\n                            onChange={info => skillsIconChange(info)}\n                          >\n                            {skillsImageUrl ? (\n                              <img\n                                src={skillsImageUrl[index]}\n                                alt=\"icon\"\n                                style={{ width: \"100%\" }}\n                              />\n                            ) : (\n                              uploadButton\n                            )}\n                          </Upload>\n                        </Form.Item>\n\n                        <Form.Item\n                          name={[field.name, \"description\"]}\n                          fieldKey={[field.fieldKey, \"description\"]}\n                          rules={rules}\n                          label=\"技能描述\"\n                        >\n                          <Input placeholder=\"技能描述\" />\n                        </Form.Item>\n                        <Form.Item\n                          name={[field.name, \"tips\"]}\n                          fieldKey={[field.fieldKey, \"tips\"]}\n                          rules={rules}\n                          label=\"小提示\"\n                        >\n                          <Input placeholder=\"小提示\" />\n                        </Form.Item>\n                        <Row>\n                          <Col span={8} offset={8}>\n                            <MinusCircleOutlined\n                              className=\"dynamic-delete-button\"\n                              style={{ marginBottom: \"80px\" }}\n                              onClick={() => {\n                                remove(field.name);\n                              }}\n                            />{\" \"}\n                            删除此技能\n                          </Col>\n                        </Row>\n                      </Col>\n                    ))}\n                  </Row>\n                  <Form.Item>\n                    <Button\n                      type=\"dashed\"\n                      onClick={() => {\n                        add();\n                      }}\n                      style={{ width: \"80%\" }}\n                    >\n                      <PlusOutlined /> 添加技能\n                    </Button>\n                  </Form.Item>\n                </div>\n              );\n            }}\n          </Form.List>\n        </TabPane>\n      </Tabs>\n      <Form.Item {...tailLayout}>\n            <Button type=\"primary\" htmlType=\"submit\">\n              Submit\n            </Button>\n          </Form.Item>\n    </Form>\n  );\n}\n\nexport default withRouter(EditHero);","import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Popconfirm, message } from \"antd\";\nimport { getHero, delHero } from \"../../services/hero\";\n\nfunction HeroList(props) {\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    getHero().then(res => {\n      setDataSource(res.data);\n    });\n  }, []);\n  const showTotal = (total) => {\n    return `共${total}条`\n  };\n\n  const columns = [\n    {\n      title: \"序号\",\n      align: \"center\",\n      render:(text,record,index)=> index+1\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"_id\",\n      width: 200,\n      align: \"center\"\n    },\n    {\n      title: \"英雄名称\",\n      dataIndex: \"name\",\n      width: 180,\n      align: \"center\"\n    },\n    {\n      title: \"英雄头像\",\n      dataIndex: \"avatar\",\n      align: \"center\",\n      render: (text, record) => {\n        return <img src={record.avatar} alt=\"\" style={{width:'60px'}} />;\n      }\n    },\n    {\n      title: \"操作\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => {\n                props.history.push(`/admin/edithero/${record._id}`);\n              }}\n            >\n              修改\n            </Button>\n            <Popconfirm\n              title=\"确定要删除此项吗？\"\n              onCancel={() => message.info(\"取消删除\")}\n              onConfirm={async () => {\n                const res = await delHero(record._id);\n                if (res.data.success === true) {\n                  message.success(\"删除成功！\");\n                  getHero().then(res => {\n                    setDataSource(res.data);\n                  });\n                }\n              }}\n            >\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                shape=\"round\"\n                style={{ margin: \"0 10px\" }}\n              >\n                删除\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Table\n      rowKey=\"_id\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={{\n        pageSize: 5,\n        showTotal:showTotal,\n        showQuickJumper: true,\n      }}\n      bordered\n      stripe\n    />\n  );\n}\n\nexport default HeroList;\n\n","import {get,put,del,post} from '../utils/http'\n\nexport function createArticle(data) {\n    return post('/rest/articles',data)\n}\n\nexport function putArticle(id,data) {\n    return put(`/rest/articles/${id}`,data)\n}\n\nexport function getArticle() {\n    return get('/rest/articles')\n}\n\nexport function getArticleByID(id) {\n    return get(`/rest/articles/${id}`)\n}\n\nexport function delArticle(id) {\n    return del(`/rest/articles/${id}`)\n}","import React, { useState, useEffect } from \"react\";\nimport { Form, Input, Button, message, Select } from \"antd\";\nimport { getCategory } from \"../../services/category\";\nimport { getArticleByID, putArticle,createArticle } from \"../../services/article\";\nimport { withRouter } from \"react-router-dom\";\n// 引入编辑器组件\nimport BraftEditor from \"braft-editor\";\n// 引入编辑器样式\nimport \"braft-editor/dist/index.css\";\n\nconst { Option } = Select;\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 10 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction EditArticle(props) {\n  const [form] = Form.useForm();\n  const [cateList, setCateList] = useState([]);\n  const [editorState, setEditorState] = useState(\n    BraftEditor.createEditorState(null)\n  );\n  const onFinish = async values => {\n    values.body = editorState.toHTML();\n    if (props.match.params.id) {\n      const res = await putArticle(props.match.params.id, { ...values });\n      if (res.status === 200) {\n        message.success(\"添加成功\");\n        props.history.push(\"/admin/articlelist\");\n      }\n    } else {\n      const res = await createArticle({ ...values });\n      if (res.status === 200) {\n        message.success(\"添加成功\");\n        props.history.push(\"/admin/articlelist\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.match.params.id) {\n      getArticleByID(props.match.params.id).then(res => {\n        form.setFieldsValue({ ...res.data });\n        setEditorState(BraftEditor.createEditorState(res.data.body));\n      });\n    }\n    getCategory().then(res => {\n      setCateList(res.data);\n    });\n  }, []);\n\n  const handleEditorChange = e => {\n    setEditorState(e);\n  };\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      form={form}\n    >\n      <Form.Item label=\"所属分类\" name=\"categories\">\n        <Select placeholder=\"请选择分类\" mode=\"multiple\">\n          {cateList.map(item => {\n            return (\n              <Option key={item._id} value={item._id}>\n                {item.name}\n              </Option>\n            );\n          })}\n        </Select>\n      </Form.Item>\n      <Form.Item\n        label=\"文章标题\"\n        name=\"title\"\n        rules={[{ required: true, message: \"请输入标题!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item\n        label=\"文章内容\"\n        rules={[{ required: true, message: \"请输入内容!\" }]}\n      >\n        <BraftEditor\n          value={editorState}\n          onChange={e => handleEditorChange(e)}\n        />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default withRouter(EditArticle);\n","import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Popconfirm, message,Tag } from \"antd\";\nimport { getArticle,delArticle } from \"../../services/article\";\n\nfunction ArticleList(props) {\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    getArticle().then(res => {\n      setDataSource(res.data);\n    });\n  }, []);\n  const showTotal = (total) => {\n    return `共${total}条`\n  };\n  const columns = [\n    {\n      title: \"序号\",\n      render:(text,record,index)=>index+1\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"_id\"\n    },\n    {\n      title: \"分类\",\n      width:280,\n      align:\"center\",\n      render: (text, record, index) => {\n          if(record.categories){\n            return (\n                <div>\n                    {\n                        record.categories.map((item,index)=>{\n                            return <Tag color=\"green\" key={index}>{item.name}</Tag>\n                        })\n                    }\n                </div>\n            )\n          }else return\n         \n      }\n    },\n    {\n      title: \"文章标题\",\n      dataIndex: \"title\"\n    },\n    {\n      title: \"操作\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => {\n                props.history.push(`/admin/editarticle/${record._id}`);\n              }}\n            >\n              修改\n            </Button>\n            <Popconfirm\n              title=\"确定要删除此项吗？\"\n              onCancel={() => message.info(\"取消删除\")}\n              onConfirm={async () => {\n                const res = await delArticle(record._id);\n                if (res.data.success === true) {\n                   message.success(\"删除成功！\")\n                   getArticle().then(res => {\n                    setDataSource(res.data);\n                  });\n                }\n            \n              }}\n            >\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                shape=\"round\"\n                style={{ margin: \"0 10px\" }}\n              >\n                删除\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Table\n      rowKey=\"_id\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={{\n        pageSize: 5,\n        showTotal:showTotal,\n        showQuickJumper: true,\n      }}\n      bordered\n      stripe\n    />\n  );\n}\n\nexport default ArticleList;\n\n","import {get,put,del,post} from '../utils/http'\n\nexport function createAdmin(data) {\n    return post('/rest/admin_users',data)\n}\n\nexport function putAdmin(id,data) {\n    return put(`/rest/admin_users/${id}`,data)\n}\n\nexport function getAdmin() {\n    return get('/rest/admin_users')\n}\n\nexport function getAdminByID(id) {\n    return get(`/rest/admin_users/${id}`)\n}\n\nexport function delAdmin(id) {\n    return del(`/rest/admin_users/${id}`)\n}","import React, { useEffect } from \"react\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { getAdminByID, putAdmin, createAdmin } from \"../../services/user\";\nimport { withRouter } from \"react-router-dom\";\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 10 }\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 }\n};\n\nconst onFinishFailed = errorInfo => {\n  console.log(\"Failed:\", errorInfo);\n};\n\nfunction EditUser(props) {\n  const [form] = Form.useForm();\n  const onFinish = async values => {\n    if (props.match.params.id) {\n      const res = await putAdmin(props.match.params.id, { ...values });\n      if (res.status === 200) {\n        message.success(\"修改成功!\");\n        props.history.push(\"/admin/userlist\");\n      }\n    } else {\n      const res = await createAdmin({ ...values });\n      if (res.status === 200) {\n        message.success(\"添加成功\");\n        props.history.push(\"/admin/userlist\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (props.match.params.id) {\n      getAdminByID(props.match.params.id).then(res => {\n        form.setFieldsValue({\n          username: res.data.username\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n      form={form}\n    >\n      <Form.Item\n        label=\"用户名\"\n        name=\"username\"\n        rules={[{ required: true, message: \"请输入分类!\" }]}\n      >\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"密码\" name=\"password\">\n        <Input type=\"password\" disabled={props.match.params.id?true:false} />\n      </Form.Item>\n\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default withRouter(EditUser);\n","import React, { useState, useEffect } from \"react\";\nimport { Table, Button, Popconfirm, message } from \"antd\";\nimport { getAdmin, delAdmin } from \"../../services/user\";\n\nfunction UserList(props) {\n  const [dataSource, setDataSource] = useState([]);\n  useEffect(() => {\n    getAdmin().then(res => {\n      setDataSource(res.data);\n    });\n  }, []);\n  const showTotal = (total) => {\n    return `共${total}条`\n  };\n  const columns = [\n    {\n      title: \"序号\",\n      align: \"center\",\n      render:(text,record,index)=> index+1\n    },\n    {\n      title: \"ID\",\n      dataIndex: \"_id\",\n      width: 200,\n      align: \"center\"\n    },\n    {\n      title: \"用户名\",\n      dataIndex: \"username\",\n      width: 280,\n      align: \"center\"\n    },\n    {\n      title: \"操作\",\n      align:\"center\",\n      render: (txt, record, index) => {\n        return (\n          <div>\n            <Button\n              type=\"primary\"\n              size=\"small\"\n              shape=\"round\"\n              onClick={() => {\n                props.history.push(`/admin/edituser/${record._id}`);\n              }}\n            >\n              修改\n            </Button>\n            <Popconfirm\n              title=\"确定要删除此项吗？\"\n              onCancel={() => message.info(\"取消删除\")}\n              onConfirm={async () => {\n                const res = await delAdmin(record._id);\n                if (res.data.success === true) {\n                  message.success(\"删除成功！\");\n                  getAdmin().then(res => {\n                    setDataSource(res.data);\n                  });\n                }\n              }}\n            >\n              <Button\n                type=\"danger\"\n                size=\"small\"\n                shape=\"round\"\n                style={{ margin: \"0 10px\" }}\n              >\n                删除\n              </Button>\n            </Popconfirm>\n          </div>\n        );\n      }\n    }\n  ];\n\n  return (\n    <Table\n      rowKey=\"_id\"\n      columns={columns}\n      dataSource={dataSource}\n      pagination={{\n        pageSize: 5,\n        showTotal:showTotal,\n        showQuickJumper: true,\n      }}\n      bordered\n      stripe\n    />\n  );\n}\n\nexport default UserList;\n\n","import Login from \"../pages/Login/index\";\nimport Home from \"../pages/Home\";\nimport EditCategory from \"../pages/category/EditCategory\";\nimport CategoryList from \"../pages/category/CategoryList\";\nimport EditItem from \"../pages/item/EditItem\";\nimport ItemList from \"../pages/item/ItemList\";\nimport EditHero from \"../pages/hero/EditHero\";\nimport HeroList from \"../pages/hero/HeroList\";\nimport EditArticle from \"../pages/article/EditArticle\";\nimport ArticleList from \"../pages/article/ArticleList\";\nimport EditUser from \"../pages/user/EditUser\";\nimport UserList from \"../pages/user/UserList\";\nimport PageNotFound from \"../pages/PageNotFound\";\n\nexport const mainRoutes = [\n  {\n    path: \"/login\",\n    component: Login\n  },\n  {\n    path: \"/404\",\n    component: PageNotFound\n  }\n];\n\nexport const adminRoutes = [\n  { path: \"/admin\", component: Home, exact: true },\n  { path: \"/admin/createcategory\", component: EditCategory },\n  { path: \"/admin/editcategory/:id\", component: EditCategory },\n  { path: \"/admin/categorylist\", component: CategoryList },\n  { path: \"/admin/createitem\", component: EditItem },\n  { path: \"/admin/edititem/:id\", component: EditItem },\n  { path: \"/admin/itemlist\", component: ItemList },\n  { path: \"/admin/createhero\", component: EditHero },\n  { path: \"/admin/edithero/:id\", component: EditHero },\n  { path: \"/admin/herolist\", component: HeroList },\n  { path: \"/admin/createarticle\", component: EditArticle },\n  { path: \"/admin/editarticle/:id\", component: EditArticle },\n  { path: \"/admin/articlelist\", component: ArticleList },\n  { path: \"/admin/createuser\", component: EditUser },\n  { path: \"/admin/edituser/:id\", component: EditUser },\n  { path: \"/admin/userlist\", component: UserList }\n];\n","import React from 'react'\n\nexport default class PageNotFound extends React.Component {\n    render() {\n        return (\n            <div>\n                页面飞走了。。。。。\n            </div>\n        )\n    }\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Layout, Menu, Breadcrumb, Button } from \"antd\";\nimport {\n  TeamOutlined,\n  UserOutlined,\n  PieChartOutlined,\n  LoginOutlined,\n  ProfileOutlined,\n  BarsOutlined,\n  SnippetsOutlined\n} from \"@ant-design/icons\";\nimport { withRouter, NavLink } from \"react-router-dom\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nfunction Index(props) {\n  const [collapsed, setCollapsed] = useState(false);\n  const [defaultKey] = useState(props.location.pathname);\n  const [defaultKey1, setDefaultKey1] = useState(props.location.pathname);\n  const [username, setUser] = useState(\"\");\n  const onCollapse = collapsed => {\n    setCollapsed(collapsed);\n    console.log(props.location);\n  };\n\n  useEffect(() => {\n    const user = localStorage.getItem(\"username\");\n    setUser(user);\n  }, []);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Sider\n        collapsible\n        collapsed={collapsed}\n        onCollapse={onCollapse}\n        breakpoint=\"sm\"\n      >\n        <div className=\"logo\" />\n        <Menu\n          theme=\"dark\"\n          defaultSelectedKeys={[`${defaultKey}`]}\n          mode=\"inline\"\n          onClick={({ item, key, keyPath, selectedKeys, domEvent }) => {\n            setDefaultKey1(key);\n          }}\n        >\n          <Menu.Item key=\"/admin\">\n            <PieChartOutlined />\n            <NavLink to=\"/admin\">\n              <span>首页</span>\n            </NavLink>\n          </Menu.Item>\n          <SubMenu\n            key=\"sub1\"\n            title={\n              <span>\n                <BarsOutlined />\n                <span>分类管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"/admin/createcategory\">\n              <NavLink to=\"/admin/createcategory\">新建分类</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/categorylist\">\n              <NavLink to=\"/admin/categorylist\">分类列表</NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key=\"sub2\"\n            title={\n              <span>\n                <SnippetsOutlined />\n                <span>装备管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"/admin/createitem\">\n              <NavLink to=\"/admin/createitem\">新建装备</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/itemlist\">\n              <NavLink to=\"/admin/itemlist\">装备列表</NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key=\"sub3\"\n            title={\n              <span>\n                <TeamOutlined />\n                <span>英雄管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"/admin/createhero\">\n              <NavLink to=\"/admin/createhero\">新建英雄</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/herolist\">\n              <NavLink to=\"/admin/herolist\">英雄列表</NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key=\"sub4\"\n            title={\n              <span>\n                <ProfileOutlined />\n                <span>文章管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"/admin/createarticle\">\n              <NavLink to=\"/admin/createarticle\">新建文章</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/articlelist\">\n              <NavLink to=\"/admin/articlelist\">文章列表</NavLink>\n            </Menu.Item>\n          </SubMenu>\n          <SubMenu\n            key=\"sub5\"\n            title={\n              <span>\n                <UserOutlined />\n                <span>用户管理</span>\n              </span>\n            }\n          >\n            <Menu.Item key=\"/admin/createuser\">\n              <NavLink to=\"/admin/createuser\">新建用户</NavLink>\n            </Menu.Item>\n            <Menu.Item key=\"/admin/userlist\">\n              <NavLink to=\"/admin/userlist\">用户列表</NavLink>\n            </Menu.Item>\n          </SubMenu>\n        </Menu>\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header className=\"site-layout-background\" style={{ padding: 0 }}>\n          <div style={{ textAlign: \"right\",paddingRight:\"20px\" }}>\n            {username}{\" \"}\n            <Button type=\"primary\" size=\"small\" icon={<LoginOutlined />} onClick={()=>{\n              localStorage.removeItem('token')\n              localStorage.removeItem('username')\n              props.history.push('/login')\n            }}>\n              Logout\n            </Button>\n          </div>\n        </Header>\n        <Content style={{ margin: \"0 16px\" }}>\n          <Breadcrumb style={{ margin: \"16px 0\" }}>\n            {defaultKey1.split(\"/\", -2).map((item, index) => {\n              return <Breadcrumb.Item key={index}>{item}</Breadcrumb.Item>;\n            })}\n          </Breadcrumb>\n          <div\n            className=\"site-layout-background\"\n            style={{ padding: 24, minHeight: 360 }}\n          >\n            {props.children}\n          </div>\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          王者荣耀管理后台 ©2020 Created by ly1994lyy\n        </Footer>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default withRouter(Index);\n","import React from \"react\";\nimport { Switch,Route } from \"react-router-dom\"\nimport { adminRoutes } from \"../router/index\"\nimport Frame from \"../component/Frame\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Frame>\n        <Switch>\n            {adminRoutes.map(route=>{\n              return <Route key={route.path} path={route.path} exact={route.exact} render={routeProps=>{\n                return <route.component {...routeProps} />\n              }} />\n            })}\n        </Switch>\n      </Frame>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router,Route,Switch,Redirect } from \"react-router-dom\"\nimport {mainRoutes} from \"./router/index\"\nimport App from \"./component/App\"\nimport './static/css/common.less'\n\nReactDOM.render(\n    <Router>\n        <Switch>\n            <Route path=\"/admin\" render={routeProps=><App {...routeProps} />} />\n            {mainRoutes.map(route=>{\n                return <Route key={route.path} {...route} />\n            })}\n            <Redirect to=\"/404\" />\n            <Redirect to=\"/login\" from=\"/\" />\n        </Switch>\n    </Router>\n, document.getElementById('root'));\n\n"],"sourceRoot":""}